#!/usr/bin/env pwsh

param(
    [Parameter(
            HelpMessage = "Path to the report file generated by opinionated-csharp-todos",
            Mandatory = $true)]
    [string]
    $ReportPath,

    [Parameter(
            HelpMessage = "Path to the directory where badges should be stored",
            Mandatory = $true)]
    [string]
    $BadgePath
)

<#
.SYNOPSIS
This script renders SVG badges using shields.io service.
#>

function Main
{
    if(!(Test-Path -Path $ReportPath))
    {
        throw "Could not find the report file: $ReportPath"
    }

    $report = Get-Content -Raw -Path $ReportPath|ConvertFrom-Json

    $counts = @{}
    foreach($fileRecords in $report)
    {
        foreach($record in $fileRecords.records)
        {
            if(!$counts.ContainsKey($record.prefix))
            {
                $counts[$record.prefix] = 0
            }

            $counts[$record.prefix]++
        }
    }

    $prefixes = $counts | Select-Object -ExpandProperty Keys | Sort-Object

    $null = New-Item -ItemType Directory -Force -Path $BadgePath

    foreach($prefix in $prefixes)
    {
        $filename = "$($prefix + "s").svg"
        $indexOfInvalidChar = $FileName.IndexOfAny(
                [System.IO.Path]::GetInvalidFileNameChars())
        if($indexOfInvalidChar -ne -1)
        {
            throw "Invalid filename for the prefix: $filename"
        }

        $count = $counts[$prefix]

        $uri = ("https://img.shields.io/static/v1?"  +
                "label=$([uri]::EscapeDataString($prefix + "s"))&" +
                "message=$([uri]::EscapeDataString($count))&" +
                "color=blue")

        $resp = Invoke-WebRequest -URI $uri

        $path = Join-Path $BadgePath $filename

        Set-Content -Path $path -Value $resp.Content

        Write-Host "Saved badge to: $path"
    }
}

Main
